# =================================================================================================
tar
===================================================================================================

主操作模式:  
  
 -A, --catenate, --concatenate   追加 tar 文件至归档  
 -c, --create               创建一个新归档  
 -d, --diff, --compare      找出归档和文件系统的差异  
 --delete               从归档(非磁带！)中删除  
 -r, --append               追加文件至归档结尾  
 -t, --list                 列出归档内容  
 --test-label           测试归档卷标并退出  
 -u, --update               仅追加比归档中副本更新的文件  
 -x, --extract, --get       从归档中解出文件  
  
 操作修饰符:  
 --check-device         当创建增量归档时检查设备号(默认)  
 -g, --listed-incremental=文件处理新式的 GNU 格式的增量备份  
 -G, --incremental          处理老式的 GNU 格式的增量备份  
 --ignore-failed-read当遇上不可读文件时不要以非零值退出  
 -n, --seek                 归档可检索  
 --no-check-device      当创建增量归档时不要检查设备号  
 --occurrence[=NUMBER]  仅处理归档中每个文件的第 NUMBER个事件；仅当与以下子命令 --delete,  
 --diff, --extract 或是 --list中的一个联合使用时，此选项才有效。而且不管文件列表是以命令行形式给出或是通过  
 -T 选项指定的；NUMBER 值默认为 1  
 --sparse-version=MAJOR[.MINOR]设置所用的离散格式版本(隐含--sparse)  
 -S, --sparse               高效处理离散文件  
  
 重写控制:  
  
 -k, --keep-old-files       解压时不要替换存在的文件  
 --keep-newer-files不要替换比归档中副本更新的已存在的文件  
 --no-overwrite-dir     保留已存在目录的元数据  
 --overwrite            解压时重写存在的文件  
 --overwrite-dir解压时重写已存在目录的元数据(默认)  
 --recursive-unlink     解压目录之前先清除目录层次  
 --remove-files         在添加文件至归档后删除它们  
 -U, --unlink-first         在解压要重写的文件之前先删除它们  
 -W, --verify               在写入以后尝试校验归档  
  
 选择输出流:  
  
 --ignore-command-error 忽略子进程的退出代码  
 --no-ignore-command-error将子进程的非零退出代码认为发生错误  
 -O, --to-stdout            解压文件至标准输出  
 --to-command=COMMAND将解压的文件通过管道传送至另一个程序  
 操作文件属性:  
  
 --atime-preserve[=METHOD]在输出的文件上保留访问时间，要么通过在读取(默认  
 METHOD=‘replace’)后还原时间，要不就不要在第一次(METHOD=‘system’)设置时间  
 --delay-directory-restore 直到解压结束才设置修改时间和所解目录的权限  
 --group=名称         强制将 NAME作为所添加的文件的组所有者  
 --mode=CHANGES         强制将所添加的文件(符号)更改为权限CHANGES  
 --mtime=DATE-OR-FILE   从 DATE-OR-FILE 中为添加的文件设置mtime  
 -m, --touch                不要解压文件的修改时间  
 --no-delay-directory-restore取消 --delay-directory-restore 选项的效果  
 --no-same-owner        将文件解压为您所有  
 --no-same-permissions从归档中解压权限时使用用户的掩码位(默认为普通用户服务)  
 --numeric-owner        总是以数字代表用户/组的名称  
 --owner=名称         强制将 NAME作为所添加的文件的所有者  
 -p, --preserve-permissions, --same-permissions解压文件权限信息(默认只为超级用户服务)  
 --preserve             与 -p 和 -s 一样  
 --same-owner           尝试解压时保持所有者关系一致  
 -s, --preserve-order, --same-order为解压至匹配归档排序名称  
  
 设备选择和切换:  
  
 -f, --file=ARCHIVE         使用归档文件或 ARCHIVE 设备  
 --force-local即使归档文件存在副本还是把它认为是本地归档  
 -F, --info-script=名称, --new-volume-script=名称在每卷磁带最后运行脚本(隐含 -M)  
 -L, --tape-length=NUMBER   写入 NUMBER × 1024 字节后更换磁带  
 -M, --multi-volume         创建/列出/解压多卷归档文件  
 --rmt-command=COMMAND  使用指定的 rmt COMMAND 代替 rmt  
 --rsh-command=COMMAND  使用远程 COMMAND 代替 rsh  
 --volno-file=文件    使用/更新 FILE 中的卷数  
  
 设备分块:  
  
 -b, --blocking-factor=BLOCKS   每个记录 BLOCKS x 512 字节  
 -B, --read-full-records    读取时重新分块(只对 4.2BSD 管道有效)  
 -i, --ignore-zeros         忽略归档中的零字节块(即文件结尾)  
 --record-size=NUMBER   每个记录的字节数 NUMBER，乘以 512  
  
 选择归档格式:  
  
 -H, --format=FORMAT        创建指定格式的归档  
  
 FORMAT 是以下格式中的一种:  
  
 gnu                      GNU tar 1.13.x 格式  
 oldgnu                   GNU 格式 as per tar <= 1.12  
 pax                      POSIX 1003.1-2001 (pax) 格式  
 posix                    等同于 pax  
 ustar                    POSIX 1003.1-1988 (ustar) 格式  
 v7                       old V7 tar 格式  
  
 --old-archive, --portability等同于 --format=v7  
 --pax-option=关键字[[:]=值][,关键字[[:]=值]]...控制 pax 关键字  
 --posix                等同于 --format=posix  
 -V, --label=TEXT           创建带有卷名 TEXT的归档；在列出/解压时，使用 TEXT作为卷名的模式串  
  
 压缩选项:  
  
 -a, --auto-compress        使用归档后缀来决定压缩程序  
 -I, --use-compress-program=PROG通过 PROG 过滤(必须是能接受 -d选项的程序)  
 -j, --bzip2                通过 bzip2 过滤归档  
 --lzma                 通过 lzma 过滤归档  
 --no-auto-compress     do not use archive suffix to determine thecompression program  
 -z, --gzip, --gunzip, --ungzip   通过 gzip 过滤归档  
 -Z, --compress, --uncompress   通过 compress 过滤归档  
  
 -J, --xz                   filter the archive through xz  
 --lzop                 通过 lzop 过滤归档  
  
 本地文件选择:  
  
 --add-file=文件      添加指定的 FILE 至归档(如果名字以 -开始会很有用的)  
 --backup[=CONTROL]     在删除前备份，选择 CONTROL 版本  
 -C, --directory=DIR        改变至目录 DIR  
 --exclude=PATTERN      排除以 PATTERN 指定的文件  
 --exclude-caches       除标识文件本身外，排除包含CACHEDIR.TAG 的目录中的内容  
 --exclude-caches-all   排除包含 CACHEDIR.TAG 的目录  
 --exclude-caches-under 排除包含 CACHEDIR.TAG的目录中所有内容  
 --exclude-tag=文件   除 FILE 自身外，排除包含 FILE的目录中的内容  
 --exclude-tag-all=文件   排除包含 FILE 的目录  
 --exclude-tag-under=文件   排除包含 FILE的目录中的所有内容  
 --exclude-vcs          排除版本控制系统目录  
 -h, --dereference跟踪符号链接；将它们所指向的文件归档并输出  
 --hard-dereference 跟踪硬链接；将它们所指向的文件归档并输出  
 -K, --starting-file=MEMBER-NAME从归档中的 MEMBER-NAME 成员处开始  
 --newer-mtime=DATE     当只有数据改变时比较数据和时间  
 --no-null              禁用上一次的效果 --null 选项  
 --no-recursion         避免目录中的自动降级  
 --no-unquote           不以 -T 读取的文件名作为引用结束  
 --null                 -T 读取以空终止的名字，-C 禁用  
 -N, --newer=DATE-OR-FILE, --after-date=DATE-OR-FILE只保存比 DATE-OR-FILE 更新的文件  
 --one-file-system      创建归档时保存在本地文件系统中  
 -P, --absolute-names       不要从文件名中清除引导符‘/’  
 --recursion            目录递归(默认)  
 --suffix=STRING        在删除前备份，除非被环境变量SIMPLE_BACKUP_SUFFIX覆盖，否则覆盖常用后缀(‘’)  
 -T, --files-from=文件    从 FILE中获取文件名来解压或创建文件  
 --unquote              以 -T读取的文件名作为引用结束(默认)  
 -X, --exclude-from=文件  排除 FILE 中列出的模式串  
  
 文件名变换:  
  
 --strip-components=NUMBER   解压时从文件名中清除 NUMBER个引导部分  
 --transform=EXPRESSION, --xform=EXPRESSION使用 sed 代替 EXPRESSION 来进行文件名变换  
  
 文件名匹配选项(同时影响排除和包括模式串):  
  
 --anchored             模式串匹配文件名头部  
 --ignore-case          忽略大小写  
 --no-anchored          模式串匹配任意‘/’后字符(默认对  
 exclusion 有效)  
 --no-ignore-case       匹配大小写(默认)  
 --no-wildcards         逐字匹配字符串  
 --no-wildcards-match-slash   通配符不匹配‘/’  
 --wildcards            使用通配符(默认对 exclusion )  
 --wildcards-match-slash通配符匹配‘/’(默认对排除操作有效)  
  
 提示性输出:  
  
 --checkpoint[=NUMBER]  每隔 NUMBER个记录显示进度信息(默认为 10 个)  
 --checkpoint-action=ACTION   在每个检查点上执行 ACTION  
 --index-file=文件    将详细输出发送至 FILE  
 -l, --check-links只要不是所有链接都被输出就打印信息  
 --no-quote-chars=STRING   禁用来自 STRING 的字符引用  
 --quote-chars=STRING   来自 STRING 的额外的引用字符  
 --quoting-style=STYLE  设置名称引用风格；有效的 STYLE值请参阅以下说明  
 -R, --block-number         每个信息都显示归档内的块数  
 --show-defaults        显示 tar 默认选项  
 --show-omitted-dir 列表或解压时，列出每个不匹配查找标准的目录  
 --show-transformed-names, --show-stored-names显示变换后的文件名或归档名  
 --totals[=SIGNAL]      处理归档后打印出总字节数；当此SIGNAL 被触发时带参数 -打印总字节数；允许的信号为:  
 SIGHUP，SIGQUIT，SIGINT，SIGUSR1 和  
 SIGUSR2；同时也接受不带 SIG  
 前缀的信号名称  
 --utc                  以 UTC 格式打印文件修改信息  
 -v, --verbose              详细地列出处理的文件  
 -w, --interactive, --confirmation每次操作都要求确认  
  
 兼容性选项:  
  
 -o                         创建归档时，相当于  
 --old-archive；展开归档时，相当于  
 --no-same-owner  
  
 其它选项:  
  
 -?, --help                 显示此帮助列表  
 --restrict             禁用某些潜在的有危险的选项  
 --usage                显示简短的用法说明  
 --version              打印程序版本  
  
长选项和相应短选项具有相同的强制参数或可选参数。  
  
除非以 --suffix 或 SIMPLE_BACKUP_SUFFIX  
设置备份后缀，否则备份后缀就是“~”。  
可以用 --backup 或 VERSION_CONTROL 设置版本控制，可能的值为：  
  
 none, off       从不做备份  
 t, numbered     进行编号备份  
 nil, existing  
如果编号备份存在则进行编号备份，否则进行简单备份  
 never, simple   总是使用简单备份  
 # =================================================================================================
 zip
 ===================================================================================================
 zip [-options] [-b path] [-t mmddyyyy] [-n suffixes] [zipfile list] [-xi list]
  The default action is to add or replace zipfile entries from list, which
  can include the special name - to compress standard input.
  If zipfile and list are omitted, zip compresses stdin to stdout.
  -f   freshen: only changed files  -u   update: only changed or new files
  -d   delete entries in zipfile    -m   move into zipfile (delete OS files)
  -r   recurse into directories     -j   junk (don't record) directory names
  -0   store only                   -l   convert LF to CR LF (-ll CR LF to LF)
  -1   compress faster              -9   compress better
  -q   quiet operation              -v   verbose operation/print version info
  -c   add one-line comments        -z   add zipfile comment
  -@   read names from stdin        -o   make zipfile as old as latest entry
  -x   exclude the following names  -i   include only the following names
  -F   fix zipfile (-FF try harder) -D   do not add directory entries
  -A   adjust self-extracting exe   -J   junk zipfile prefix (unzipsfx)
  -T   test zipfile integrity       -X   eXclude eXtra file attributes
  -y   store symbolic links as the link instead of the referenced file
  -e   encrypt                      -n   don't compress these suffixes
  -h2  show more help
 # =================================================================================================
 rar
 ===================================================================================================
 Usage:     rar <command> -<switch 1> -<switch N> <archive> <files...>
               <@listfiles...> <path_to_extract\>
<Commands>
  a             Add files to archive
  c             Add archive comment
  ch            Change archive parameters
  cw            Write archive comment to file
  d             Delete files from archive
  e             Extract files without archived paths
  f             Freshen files in archive
  i[par]=<str>  Find string in archives
  k             Lock archive
  l[t[a],b]     List archive contents [technical[all], bare]
  m[f]          Move to archive [files only]
  p             Print file to stdout
  r             Repair archive
  rc            Reconstruct missing volumes
  rn            Rename archived files
  rr[N]         Add data recovery record
  rv[N]         Create recovery volumes
  s[name|-]     Convert archive to or from SFX
  t             Test archive files
  u             Update files in archive
  v[t[a],b]     Verbosely list archive contents [technical[all],bare]
  x             Extract files with full path

<Switches>
  -             Stop switches scanning
  @[+]          Disable [enable] file lists
  ad            Append archive name to destination path
  ag[format]    Generate archive name using the current date
  ai            Ignore file attributes
  ap<path>      Set path inside archive
  as            Synchronize archive contents
  c-            Disable comments show
  cfg-          Disable read configuration
  cl            Convert names to lower case
  cu            Convert names to upper case
  df            Delete files after archiving
  dh            Open shared files
  ds            Disable name sort for solid archive
  dw            Wipe files after archiving
  e[+]<attr>    Set file exclude and include attributes
  ed            Do not add empty directories
  en            Do not put 'end of archive' block
  ep            Exclude paths from names
  ep1           Exclude base directory from names
  ep3           Expand paths to full including the drive letter
 f             Freshen files
  hp[password]  Encrypt both file data and headers
  ht[b|c]       Select hash type [BLAKE2,CRC32] for file checksum
  id[c,d,p,q]   Disable messages
  ierr          Send all messages to stderr
  ilog[name]    Log errors to file (registered versions only)
  inul          Disable all messages
  isnd          Enable sound
  k             Lock archive
  kb            Keep broken extracted files
  log[f][=name] Write names to log file
  m<0..5>       Set compression level (0-store...3-default...5-maximal)
  ma[4|5]       Specify a version of archiving format
  mc<par>       Set advanced compression parameters
  md<n>[k,m,g]  Dictionary size in KB, MB or GB
  ms[ext;ext]   Specify file types to store
  mt<threads>   Set the number of threads
  n<file>       Additionally filter included files
  n@            Read additional filter masks from stdin
  n@<list>      Read additional filter masks from list file
  o[+|-]        Set the overwrite mode
  oh            Save hard links as the link instead of the file
  oi[0-4][:min] Save identical files as references
  ol[a]         Process symbolic links as the link [absolute paths]
  or            Rename files automatically
  ow            Save or restore file owner and group
  p[password]   Set password
  p-            Do not query password
  qo[-|+]       Add quick open information [none|force]
  r             Recurse subdirectories
  r-            Disable recursion
  r0            Recurse subdirectories for wildcard names only
  rr[N]         Add data recovery record
  rv[N]         Create recovery volumes
  s[<N>,v[-],e] Create solid archive
  s-            Disable solid archiving
  sc<chr>[obj]  Specify the character set
  sfx[name]     Create SFX archive
  si[name]      Read data from standard input (stdin)
  sl<size>      Process files with size less than specified
  sm<size>      Process files with size more than specified
  t             Test files after archiving
  ta<date>      Process files modified after <date> in YYYYMMDDHHMMSS format
  tb<date>      Process files modified before <date> in YYYYMMDDHHMMSS format
  tk            Keep original archive time
  tl            Set archive time to latest file
  tn<time>      Process files newer than <time>
  to<time>      Process files older than <time>
  ts<m,c,a>[N]  Save or restore file time (modification, creation, access)
  u             Update files
  v<size>[k,b]  Create volumes with size=<size>*1000 [*1024, *1]
  ver[n]        File version control
  vn            Use the old style volume naming scheme
  vp            Pause before each volume
  w<path>       Assign work directory
  x<file>       Exclude specified file
  x@            Read file names to exclude from stdin
  x@<list>      Exclude files listed in specified list file
  y             Assume Yes on all queries
  z[file]       Read archive comment from file
 # =================================================================================================
 Additionl
 Linux下分卷Zip文件的合并并解压缩
 ==>例如linux.zip.001, linux.zip.002, linux.zip.003...
 ==>首先 cat linux.zip* > linux.zip  #合并为一个zip包
 ==>然后 unzip linux.zip #解压zip包
 
 
 